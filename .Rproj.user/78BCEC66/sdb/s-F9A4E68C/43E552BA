{
    "collab_server" : "",
    "contents" : "\\name{MMAE}\n\\alias{MMAE}\n%- Also NEED an '\\alias' for EACH other topic documented here.\n\\title{\nMultiple Model Adaptive Estimation\n}\n\\description{\nThis function implements the Multiple Model Adaptive Estimation (MMAE) algorithm, which implements a bank of Boolean Kalman Filters running in parallel on a dataset in order to estimate model parameters. \n}\n\\usage{\nMMAE(data, net, p, threshold, Prior = NA, obsModel = NA)\n}\n%- maybe also 'usage' for other objects documented here.\n\\arguments{\n\\item{data}{\nData from which the MMAE algorithm should attempt to estimate parameters\n}\n\\item{net}{\nA vector of potential networks, defined in the BoolNet \\code{loadNetwork} vernacular, from which the MMAE algorithm should choose the most probable network for the given data in \\code{Y}\n}\n\\item{p}{\nA vector containing different possible intensities of Bernoulli process noise, from which the MMAE algorithm should choose the most likely\n}\n\\item{threshold}{\nA posterior probability threshold value (between 0 and 1) for which the MMAE should stop running\n}\n\\item{Prior}{\nA vector of the prior probabilities of the possible combinations of the various networks and process noise parameters input to the algorithm. The vector must be of size \\code{length(net)*length(p)}. The entries into the vector will follow the pattern:\n\\cr\n\\cr\nnet1, p1\\cr\nnet1, p2\\cr\n...\\cr\nnetm, pn\\cr\n\\cr\nwhere m is the total number of potential networks and n is the total number of the possible \\code{p} values.\nThe default prior ovse models is uniform.\n}\n\\item{obsModel}{\nParameters for the chosen observation model.\\cr\n}\n}\n\\value{\nThe MMAE algorithm will return which network and process noise value is most likely to have generated the given dataset supplied in \\code{Y}. \n\\cr\n\\cr\nIf the posterior probability for any of the combinations of networks and process noise parameters fails to surpass the value defined in the \\code{threshold} variable, the algorithm will output that no decision could be made using the given data. \n}\n\\source{\nImani, M., & Braga-Neto, U. (2015, November). Optimal gene regulatory network inference using the boolean kalman filter and multiple model adaptive estimation. In 2015 49th Asilomar Conference on Signals, Systems and Computers (pp. 423-427). IEEE.\n}\n\n\\examples{\n\n#load potential networks\ndata(p53net_DNAdsb0)\ndata(p53net_DNAdsb1)\n\nnet1 <- p53net_DNAdsb0\nnet2 <- p53net_DNAdsb1\n\n#define observation model\nobservation = list(type = 'NB', s = 10.875, mu = 0.01, delta = c(2, 2, 2, 2), phi = c(3, 3, 3, 3))\n\n#simulate data using one of the networks and a given 'p'\ndata <- simulateNetwork(net1, n.data = 100, p = 0.02, obsModel = observation)\n       \n#run MMAE to determine model selection and parameter estimation\nMMAE(data, net=c(\"net1\",\"net2\"), p=c(0.02,0.1,0.15), threshold=0.8, obsModel = observation)\n\n\n}\n\n",
    "created" : 1462907670596.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2511387784",
    "id" : "43E552BA",
    "lastKnownWriteTime" : 1483767427,
    "last_content_update" : 1483767427032,
    "path" : "~/Dropbox/BoolFilter/man/MMAE.Rd",
    "project_path" : "man/MMAE.Rd",
    "properties" : {
    },
    "relative_order" : 0,
    "source_on_save" : true,
    "source_window" : "",
    "type" : "r_doc"
}